on:  
  push:
    branches-ignore:
      - main
name: Build
jobs:
  Build:
    runs-on: windows-latest
    name: A job to run VSTest
    steps:
      - uses: actions/checkout@v2

      - name: Create custom environment
        run: |
          $short = git rev-parse --short HEAD | Out-String
          echo "RELEASE_NUMBER=1.0.0-$short" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          $location = (Resolve-Path .\).Path
          echo "BUILD_RELESE_PATH=$location\release" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1

      - name: Restore
        run: nuget restore

      - name: Build test projects
        run: |
             Get-ChildItem -Include *.csproj -Recurse -Path .\test\ | 
             ForEach-Object -ErrorAction Stop -Process { 
                msbuild /p:Configuration=Release,RestorePackages=false $_.FullName 
                if ($? -eq $false) {
                    throw "Build error in: $_";
                }
             }

      - name: Run tests
        uses: microsoft/vstest-action@v1.0.0
        with:
           testAssembly: '**\bin\Release\*Test.dll'
           searchFolder:  .\test\
           runInParallel: true
  Sonar:
    name: Analyze
    runs-on: windows-latest
    needs: Build
    steps:
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Setup NuGet
        uses: nuget/setup-nuget@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install Code Coverage
        shell: powershell
        run: |
          New-Item -Path .\.tool\dotnet-coverage -ItemType Directory
          dotnet tool update dotnet-coverage --tool-path .\.tool\dotnet-coverage
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"github-action-test-full-framework" /o:"dcheld-org" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"